import org.code.neighborhood.*;

public class OutlinePainter extends PainterPlus {

  // how the painter gets to the starting point\\
public void startPoint(){
  turnRight();
  move();
  move();
  move();
  turnLeft();
  move();
  move();
}
// makes the black outline of the heart\\
public void outlineShape(String color){
  move();
  paint(color);
  move();
  paint(color);
  move();
  paint(color);
  move();
  turnRight();
  move();
  paint(color);
  move();
  turnLeft();
  move();
  paint(color);
  move();
  paint(color);
  move();
  turnLeft();
   move();
  paint(color);
  move();
  turnRight();
  move();
  paint(color);
  move();
  paint(color);
  move();
  paint(color);
  move();
  turnRight();
  move();
  paint(color);
  move();
  turnLeft();
  move();
  turnRight();
  paint(color);
  move();
  paint(color);
  move();
  paint(color);
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  move();
  paint(color);
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  turnLeft();
  move();
  turnRight();
  move();
  paint(color);
  move();
  paint(color);
  move();
  paint(color);
  move();
  turnRight();
  move();
  paint(color);
}
  // colors the inside of the heart\\
  public void insideHeart(String color){
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    move();
    move();
    move();
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    turnRight();
    move();
    paint(color);
    turnRight();
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    move();
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    turnLeft();
    move();
    turnLeft();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    turnRight();
    move();
    turnRight();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    turnLeft();
    move();
    turnLeft();
    move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
     move();
    paint(color);
    turnRight();
    move();
    turnRight();
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    turnLeft();
    move();
    turnLeft();
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    turnRight();
    move();
    turnRight();
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    move();
    paint(color);
    turnLeft();
    move();
    turnLeft();
    move();
    paint(color);
    move();
    paint(color);
    move();
    move();
    move();
  
    
    
  }
}